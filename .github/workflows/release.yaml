---
name: Release `jq` latest as WASM

run-name: 'Release `jq` latest as WASM (from: ${{ github.ref }})'

on:
  workflow_call:
  workflow_dispatch:

jobs:
  job-a:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: emscripten-core/emsdk
          path: emsdk

      - name: 'Install build requirement: `emscripten`'
        run: |
          ./emsdk install latest
          ./emsdk activate latest
          
          old_path_file=$(mktemp)
          echo $PATH | tee $old_path_file
          
          source ./emsdk_env.sh
          
          new_path_file=$(mktemp)
          echo $PATH | tee $new_path_file        
          
          #git diff --word-diff --word-diff-regex=. --no-index $old_path_file $new_path_file

          echo $PATH > $GITHUB_PATH
        working-directory: emsdk

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          path: main

      - name: 'Verify build requirement: `emscripten`'
        run: |
          emcc -v

      - name: 'Prep the `jq` module'
        run: |
          git submodule update --init
          autoreconf -i
          emconfigure ./configure --with-oniguruma=builtinrun
          emmake make LDFLAGS=-all-static
          cp jq jq.o
        working-directory: main/jq

      - name: 'Try to do the thing with the `jq` module'
        run: |
          emcc jq.o -o jq.js -s ERROR_ON_UNDEFINED_SYMBOLS=0
        working-directory: main/jq

      - name: Create test data
        id: test-data
        run: |
          tmpfile=$(mktemp)
          echo '{ "a": "b" }' > $tmpfile
          echo "json=$tmpfile" | tee -a $GITHUB_OUTPUT

      - env:
          JSON_FILE: ${{ steps.test-data.outputs.json }}
        run: |
          node jq.js '.a' $JSON_FILE
        working-directory: main/jq
